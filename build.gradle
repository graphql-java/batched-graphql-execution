import java.text.SimpleDateFormat

plugins {
    id "com.jfrog.bintray" version "1.8.4"
    id "io.spring.dependency-management" version "1.0.7.RELEASE"
    id 'java'
    id 'java-library'
    id 'maven'
    id 'maven-publish'
    id 'antlr'
    id 'groovy'
}


def getDevelopmentVersion() {
    def output = new StringBuilder()
    def error = new StringBuilder()
    def gitShortHash = ["git", "-C", projectDir.toString(), "rev-parse", "--short", "HEAD"].execute()
    gitShortHash.waitForProcessOutput(output, error)
    def gitHash = output.toString().trim()
    if (gitHash.isEmpty()) {
        println "git hash is empty: error: ${error.toString()}"
        throw new IllegalStateException("git hash could not be determined")
    }
    def version = new SimpleDateFormat('yyyy-MM-dd\'T\'HH-mm-ss').format(new Date()) + "-" + gitHash
    println "created development version: $version"
    version
}


sourceCompatibility = 1.8
targetCompatibility = 1.8
def graphQLJavaVersion = '2021-01-27T06-23-16-986ee60'
def slf4jVersion = '1.7.25'
def releaseVersion = System.env.RELEASE_VERSION
version = releaseVersion ? releaseVersion : getDevelopmentVersion()
group = 'com.graphql-consulting'


repositories {
    mavenCentral()
    mavenLocal()
    maven { url  "http://dl.bintray.com/andimarek/graphql-java" }
}

apply plugin: 'groovy'

jar {
    from "LICENSE.md"
}

dependencyManagement {
    imports {
        mavenBom "io.projectreactor:reactor-bom:Dysprosium-SR7"
    }
}
dependencies {
    api('com.graphql-java:graphql-java:' + graphQLJavaVersion)
    api 'io.projectreactor:reactor-core'
    api 'io.projectreactor:reactor-tools'
    implementation 'org.slf4j:slf4j-api:' + slf4jVersion


    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.codehaus.groovy:groovy-all:2.5.13'
    testImplementation 'cglib:cglib-nodep:3.3.0'
    testImplementation 'org.objenesis:objenesis:2.1'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    testImplementation 'org.slf4j:slf4j-simple:' + slf4jVersion
    testImplementation 'org.awaitility:awaitility-groovy:3.0.0'

    testImplementation 'org.openjdk.jmh:jmh-core:1.21'
    testImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.21'
}



task sourcesJar(type: Jar) {
    dependsOn classes
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options.encoding = 'UTF-8'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

allprojects {
    tasks.withType(Javadoc) {
        exclude('**/antlr/**')
    }


}

publishing {

    publications {

        graphqlJava(MavenPublication) {
            version version
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            pom.withXml {
                // The ANTLR-related code below--introduced in `1ac98bf`--addresses an issue with
                // the Gradle ANTLR plugin. `1ac98bf` can be reverted and this comment removed once
                // that issue is fixed and Gradle upgraded. See https://goo.gl/L92KiF and https://goo.gl/FY0PVR.
                Node pomNode = asNode()
                pomNode.children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'graphql-java'
                    description 'GraphqL Batched execution'
                    url "https://github.com/andimarek/batched-execution"
                    scm {
                        url "https://github.com"
                        connection "https://github.com/"
                        developerConnection "https://github.com/"
                    }
                    licenses {
                        license {
                            name 'PROPER'
                            url 'https://github.com/'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'andimarek'
                            name 'Andreas Marek'
                        }
                    }
                }
            }
        }
    }
}


//bintray {
//    user = System.env.BINTRAY_USER ?: project["bintray.user"]
//    key = System.env.BINTRAY_API_KEY ?: project["bintray.key"]
//    publications = ['graphqlJava']
//    publish = true
//    pkg {
//        repo = 'graphql-java'
//        name = 'graphql-java'
//        desc = 'GraphQL in Java'
//        licenses = ['MIT']
//        vcsUrl = 'https://github.com/graphql-java/graphql-java'
//
//        version {
//            name = project.version
//            desc = project.description
//            released = new Date()
//            vcsTag = 'v' + project.version
//            gpg {
//                sign = true
//            }
//            mavenCentralSync {
//                sync = true
//                user = System.env.MAVEN_CENTRAL_USER
//                password = System.env.MAVEN_CENTRAL_PASSWORD
//                close = '1'
//            }
//        }
//    }
//}

// all publish tasks depend on the build task
tasks.withType(PublishToMavenRepository) {
    dependsOn build
}


task myWrapper(type: Wrapper) {
    gradleVersion = '6.7'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
